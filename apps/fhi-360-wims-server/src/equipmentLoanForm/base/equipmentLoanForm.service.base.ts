/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EquipmentLoanForm as PrismaEquipmentLoanForm,
} from "@prisma/client";

export class EquipmentLoanFormServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EquipmentLoanFormCountArgs, "select">
  ): Promise<number> {
    return this.prisma.equipmentLoanForm.count(args);
  }

  async equipmentLoanForms(
    args: Prisma.EquipmentLoanFormFindManyArgs
  ): Promise<PrismaEquipmentLoanForm[]> {
    return this.prisma.equipmentLoanForm.findMany(args);
  }
  async equipmentLoanForm(
    args: Prisma.EquipmentLoanFormFindUniqueArgs
  ): Promise<PrismaEquipmentLoanForm | null> {
    return this.prisma.equipmentLoanForm.findUnique(args);
  }
  async createEquipmentLoanForm(
    args: Prisma.EquipmentLoanFormCreateArgs
  ): Promise<PrismaEquipmentLoanForm> {
    return this.prisma.equipmentLoanForm.create(args);
  }
  async updateEquipmentLoanForm(
    args: Prisma.EquipmentLoanFormUpdateArgs
  ): Promise<PrismaEquipmentLoanForm> {
    return this.prisma.equipmentLoanForm.update(args);
  }
  async deleteEquipmentLoanForm(
    args: Prisma.EquipmentLoanFormDeleteArgs
  ): Promise<PrismaEquipmentLoanForm> {
    return this.prisma.equipmentLoanForm.delete(args);
  }
}
