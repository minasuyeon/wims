/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ProductRegistrationForm as PrismaProductRegistrationForm,
} from "@prisma/client";

export class ProductRegistrationFormServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ProductRegistrationFormCountArgs, "select">
  ): Promise<number> {
    return this.prisma.productRegistrationForm.count(args);
  }

  async productRegistrationForms(
    args: Prisma.ProductRegistrationFormFindManyArgs
  ): Promise<PrismaProductRegistrationForm[]> {
    return this.prisma.productRegistrationForm.findMany(args);
  }
  async productRegistrationForm(
    args: Prisma.ProductRegistrationFormFindUniqueArgs
  ): Promise<PrismaProductRegistrationForm | null> {
    return this.prisma.productRegistrationForm.findUnique(args);
  }
  async createProductRegistrationForm(
    args: Prisma.ProductRegistrationFormCreateArgs
  ): Promise<PrismaProductRegistrationForm> {
    return this.prisma.productRegistrationForm.create(args);
  }
  async updateProductRegistrationForm(
    args: Prisma.ProductRegistrationFormUpdateArgs
  ): Promise<PrismaProductRegistrationForm> {
    return this.prisma.productRegistrationForm.update(args);
  }
  async deleteProductRegistrationForm(
    args: Prisma.ProductRegistrationFormDeleteArgs
  ): Promise<PrismaProductRegistrationForm> {
    return this.prisma.productRegistrationForm.delete(args);
  }
}
