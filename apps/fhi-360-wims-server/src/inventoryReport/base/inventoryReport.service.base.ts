/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  InventoryReport as PrismaInventoryReport,
} from "@prisma/client";

export class InventoryReportServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.InventoryReportCountArgs, "select">
  ): Promise<number> {
    return this.prisma.inventoryReport.count(args);
  }

  async inventoryReports(
    args: Prisma.InventoryReportFindManyArgs
  ): Promise<PrismaInventoryReport[]> {
    return this.prisma.inventoryReport.findMany(args);
  }
  async inventoryReport(
    args: Prisma.InventoryReportFindUniqueArgs
  ): Promise<PrismaInventoryReport | null> {
    return this.prisma.inventoryReport.findUnique(args);
  }
  async createInventoryReport(
    args: Prisma.InventoryReportCreateArgs
  ): Promise<PrismaInventoryReport> {
    return this.prisma.inventoryReport.create(args);
  }
  async updateInventoryReport(
    args: Prisma.InventoryReportUpdateArgs
  ): Promise<PrismaInventoryReport> {
    return this.prisma.inventoryReport.update(args);
  }
  async deleteInventoryReport(
    args: Prisma.InventoryReportDeleteArgs
  ): Promise<PrismaInventoryReport> {
    return this.prisma.inventoryReport.delete(args);
  }
}
