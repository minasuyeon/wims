/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, UserRole as PrismaUserRole } from "@prisma/client";

export class UserRoleServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.UserRoleCountArgs, "select">): Promise<number> {
    return this.prisma.userRole.count(args);
  }

  async userRoles(
    args: Prisma.UserRoleFindManyArgs
  ): Promise<PrismaUserRole[]> {
    return this.prisma.userRole.findMany(args);
  }
  async userRole(
    args: Prisma.UserRoleFindUniqueArgs
  ): Promise<PrismaUserRole | null> {
    return this.prisma.userRole.findUnique(args);
  }
  async createUserRole(
    args: Prisma.UserRoleCreateArgs
  ): Promise<PrismaUserRole> {
    return this.prisma.userRole.create(args);
  }
  async updateUserRole(
    args: Prisma.UserRoleUpdateArgs
  ): Promise<PrismaUserRole> {
    return this.prisma.userRole.update(args);
  }
  async deleteUserRole(
    args: Prisma.UserRoleDeleteArgs
  ): Promise<PrismaUserRole> {
    return this.prisma.userRole.delete(args);
  }
}
