/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Form as PrismaForm } from "@prisma/client";

export class FormServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.FormCountArgs, "select">): Promise<number> {
    return this.prisma.form.count(args);
  }

  async forms(args: Prisma.FormFindManyArgs): Promise<PrismaForm[]> {
    return this.prisma.form.findMany(args);
  }
  async form(args: Prisma.FormFindUniqueArgs): Promise<PrismaForm | null> {
    return this.prisma.form.findUnique(args);
  }
  async createForm(args: Prisma.FormCreateArgs): Promise<PrismaForm> {
    return this.prisma.form.create(args);
  }
  async updateForm(args: Prisma.FormUpdateArgs): Promise<PrismaForm> {
    return this.prisma.form.update(args);
  }
  async deleteForm(args: Prisma.FormDeleteArgs): Promise<PrismaForm> {
    return this.prisma.form.delete(args);
  }
}
