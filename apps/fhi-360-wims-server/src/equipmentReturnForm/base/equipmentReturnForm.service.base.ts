/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  EquipmentReturnForm as PrismaEquipmentReturnForm,
} from "@prisma/client";

export class EquipmentReturnFormServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.EquipmentReturnFormCountArgs, "select">
  ): Promise<number> {
    return this.prisma.equipmentReturnForm.count(args);
  }

  async equipmentReturnForms(
    args: Prisma.EquipmentReturnFormFindManyArgs
  ): Promise<PrismaEquipmentReturnForm[]> {
    return this.prisma.equipmentReturnForm.findMany(args);
  }
  async equipmentReturnForm(
    args: Prisma.EquipmentReturnFormFindUniqueArgs
  ): Promise<PrismaEquipmentReturnForm | null> {
    return this.prisma.equipmentReturnForm.findUnique(args);
  }
  async createEquipmentReturnForm(
    args: Prisma.EquipmentReturnFormCreateArgs
  ): Promise<PrismaEquipmentReturnForm> {
    return this.prisma.equipmentReturnForm.create(args);
  }
  async updateEquipmentReturnForm(
    args: Prisma.EquipmentReturnFormUpdateArgs
  ): Promise<PrismaEquipmentReturnForm> {
    return this.prisma.equipmentReturnForm.update(args);
  }
  async deleteEquipmentReturnForm(
    args: Prisma.EquipmentReturnFormDeleteArgs
  ): Promise<PrismaEquipmentReturnForm> {
    return this.prisma.equipmentReturnForm.delete(args);
  }
}
