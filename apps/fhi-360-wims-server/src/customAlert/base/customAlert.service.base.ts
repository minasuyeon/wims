/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CustomAlert as PrismaCustomAlert,
  Product as PrismaProduct,
} from "@prisma/client";

export class CustomAlertServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CustomAlertCountArgs, "select">
  ): Promise<number> {
    return this.prisma.customAlert.count(args);
  }

  async customAlerts(
    args: Prisma.CustomAlertFindManyArgs
  ): Promise<PrismaCustomAlert[]> {
    return this.prisma.customAlert.findMany(args);
  }
  async customAlert(
    args: Prisma.CustomAlertFindUniqueArgs
  ): Promise<PrismaCustomAlert | null> {
    return this.prisma.customAlert.findUnique(args);
  }
  async createCustomAlert(
    args: Prisma.CustomAlertCreateArgs
  ): Promise<PrismaCustomAlert> {
    return this.prisma.customAlert.create(args);
  }
  async updateCustomAlert(
    args: Prisma.CustomAlertUpdateArgs
  ): Promise<PrismaCustomAlert> {
    return this.prisma.customAlert.update(args);
  }
  async deleteCustomAlert(
    args: Prisma.CustomAlertDeleteArgs
  ): Promise<PrismaCustomAlert> {
    return this.prisma.customAlert.delete(args);
  }

  async getProduct(parentId: string): Promise<PrismaProduct | null> {
    return this.prisma.customAlert
      .findUnique({
        where: { id: parentId },
      })
      .product();
  }
}
